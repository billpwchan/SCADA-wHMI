# Gestion de Configuration
#   Propriété permettant d'activer les tâches ClearCase, qui effectuent les checkIN
#   Pour activer les tâches, il faut déclarer la propriété
# --------------------------------------------------------
#clearcase.activated=true

# Répertoire pour les scripts du serveur:
#	unix : .sh
#	win :  .bat
#       both : .sh et .bat
# ---------------------------------------
server.script.dir=both

# Nom du package server pour les règles métiers, calculateurs, etc...
# -------------------------------------------------------------------
specific.package=umcd

#  Arborescence d'integration
# ---------------------------
integration.home            = ${mc.integration.home}
integration.com             = ${integration.home}/00_com
integration.com.scadasoft   = ${integration.com}/scadasoft
integration.com.bdScada     = ${integration.com}/systeme_principal/recu/BD/scada
integration.com.bdAniExport = ${integration.com}/systeme_principal/recu/BD/animator_export
integration.com.parametrage = ${integration.com}/systeme_principal/recu/parametrage
integration.com.annuaire    = ${integration.com}/systeme_principal/recu/annuaire

integration.imp			= ${integration.home}/04_imp
integration.imp.lib		= ${integration.imp}/lib
integration.imp.bin		= ${integration.imp}/bin
integration.imp.conf		= ${integration.imp}/conf
integration.imp.resource	= ${integration.imp}/resource
integration.imp.xml		= ${integration.imp}/xml
integration.imp.xml.generated	= ${integration.imp.xml}/generated
integration.imp.xml.gui		= ${integration.imp.xml}/gui/${specific.package}
integration.imp.xml.profiles	= ${integration.imp.xml}/profiles
integration.imp.java.source	= ${integration.imp}/src
integration.imp.requetes	= ${integration.imp}/Requetes/Requêtes Prédéfinies/
integration.imp.help		= ${integration.imp}/help

integration.dep			= ${integration.home}/06_dep

# Paramétres de la livraison SCADASoft
# ------------------------------------
scsconf.home				    = ${mc.scsconf.home}
scsconf.xml				= ${scsconf.home}/xml
scsconf.xml.server			= ${scsconf.xml}/server
scsconf.xml.server.schema		= ${scsconf.xml.server}/schema
scsconf.xml.server.external		= ${scsconf.xml.server}/external
scsconf.xml.server.dtd			= ${scsconf.xml.server}/dtd
scsconf.xml.server.profiles		= ${scsconf.xml.server}/profiles
scsconf.xml.server.profiles.roles	= ${scsconf.xml.server.profiles}/roles
scsconf.xml.client.dtd			= ${scsconf.xml}/client/dtd
scsconf.xml.client.requetes		= ${scsconf.xml}/client/requetes

scsconf.conf				= ${scsconf.home}/conf
scsconf.conf.server			= ${scsconf.conf}/server
scsconf.conf.client			= ${scsconf.conf}/client

scsconf.lib				= ${scsconf.home}/lib
scsconf.lib.client			= ${scsconf.lib}/client
scsconf.lib.server			= ${scsconf.lib}/server

scsconf.bin				= ${scsconf.home}/bin
scsconf.bin.server			= ${scsconf.bin}/server
scsconf.bin.client			= ${scsconf.bin}/client

scsconf.builder				= ${scsconf.home}/builder
scsconf.builder.server			= ${scsconf.builder}/server
scsconf.builder.server.bin		= ${scsconf.builder.server}/bin
scsconf.builder.bin			= ${scsconf.builder}/bin
scsconf.builder.client			= ${scsconf.builder}/client
scsconf.builder.client.install		= ${scsconf.builder.client}/install
scsconf.builder.generator		= ${scsconf.home}/generator
scsconf.builder.generator.xml		= ${scsconf.builder.generator}/xml

scsconf.resources.client		= ${scsconf.home}/resources/client

scsconf.animator			= ${scsconf.home}/../animator

#  Chemin du JDK
# --------------
#java.home	= positionné par le builder.bat
java.home.lib	= ${mc.java.home}/jre/lib

#    Structure interne de l'installeur 
#    (etre en confirmite avec le fichier install.env de l'installeur)
integration.dep.install.dist		= ${integration.dep}/install/bin/ant/tmp
integration.dep.install.INSTALL_DIRNAME	= INSTALL_configurateur
integration.dep.sauveresto		= ${integration.dep}/environnement_sauv_resto
integration.dep.admin			= ${integration.dep}/admin_configurateur

#  Compilation
# ------------
build.compiler = javac

#  Nommage des distribs
# ---------------------
configurateur.jar.server		= configurateurServer.jar
configurateur.jar.server.specific	= configurateurServerUMCD.jar
configurateur.jar.common		= configurateurCommon.jar
configurateur.jar.rmi			= configurateurRmi.jar
configurateur.jar.client		= configurateurClient.jar

#  Structure interne du Builder
# -----------------------------
# internal.path variable is generated by M-Conf
internal.path	          = ${mc.production.home}
internal.path.dist.jar	  = ${internal.path}/dist/jar
internal.path.dist.server = ${internal.path}/dist/server
internal.path.dist.client = ${internal.path}/dist/client
internal.path.dist.installer = ${internal.path}/installer
internal.path.work        = ${internal.path}/work
internal.path.work.data   = ${internal.path.work}/data
internal.path.work.classes= ${internal.path.work}/compilation
internal.path.work.server = ${internal.path.work}/server
internal.path.work.client = ${internal.path.work}/client
internal.path.work.client.installClient = ${internal.path.work.client}/installClient 
internal.path.work.installClient = ${internal.path.work}/installClient

# Environnement de génération du Schèma
# --------------------------------------
# Répertoire ou se trouve les fichier XMI et XML de l'export silverRun
schema.build.importDir = ${integration.com.parametrage}/MCD

# Répertoire ou mettre le fichier en sortie
schema.build.exportDir = ${integration.imp.xml}
#POUR TESTER, il est possible de faire la sortie dans un répertoire temporaire :
#schema.build.exportDir = D:/temp/PROD_GEN_MCD/PCC/Output

# Répertoire d'installation des feuilles de style
schema.build.stylesheetDir = ${scsconf.builder.generator}/xsl
